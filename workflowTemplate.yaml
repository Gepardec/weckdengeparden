# TODO mit oc!
# oc adm policy add-scc-to-user anyuid -z builder
# oc create secret docker-registry builder-dockerconfig --docker-username=serviceaccount --docker-password=$(oc sa get-token builder) --docker-email=builder@example.org --docker-server=image-registry.openshift-image-registry.svc.cluster.local:5000

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  namespace: bewerberservice-ci
  name: bewerberservice-cicd-workflow
spec:
  serviceAccountName: builder
  entrypoint: cicd
  arguments:
    parameters:
      - name: repo
        value: https://github.com/Gepardec/weckdengeparden.git
      - name: revision
        value: feature/argo-workflows
  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        resources:
          requests:
            storage: 500M
        accessModes: ["ReadWriteOnce"]
  templates:
    - name: cicd
      steps:
        - - name: checkout
            template: checkout
        - - name: build-jar
            template: build-jar
        - - name: image-build-push
            template: image-build-push
            arguments:
              parameters:
                - name: tag
                  value: "{{ steps.checkout.outputs.parameters.image-tag }}"
    - name: checkout
      metadata:
        labels:
          app: argo
      container:
        image: alpine/git
        name: git
        command: [sh, -c]
        args: ["cd /mnt/out/ && git clone {{ workflow.parameters.repo }} && cd weckdengeparden && git checkout $(echo {{ workflow.parameters.revision }} | cut -d '/' -f3-) && git rev-parse --short HEAD > ./git-commit"]
        volumeMounts:
          - name: workspace
            mountPath: /mnt/out/
      outputs:
        parameters:
          - name: image-tag
            valueFrom:
              path: /mnt/out/weckdengeparden/git-commit
    - name: build-jar
      metadata:
        labels:
          app: argo
      container:
        image: "maven:3.8.4-jdk-11"
        command: [sh, -c]
        args: ["cd /mnt/out/weckdengeparden/ && mvn clean package -DskipTests"]
        volumeMounts:
          - name: workspace
            mountPath: /mnt/out/
    - name: image-build-push
      inputs:
        parameters:
          - name: tag
      metadata:
        labels:
          app: argo
      container:
        image: gcr.io/kaniko-project/executor:latest
        args:
          - --dockerfile=Containerfile
          - --context=/mnt/out/weckdengeparden
          - --destination=image-registry.openshift-image-registry.svc.cluster.local:5000/bewerberservice-ci/wdg:{{inputs.parameters.tag}}
          - --skip-tls-verify
        volumeMounts:
          - name: workspace
            mountPath: /mnt/out/
          - name: dockerconfig
            mountPath: /kaniko/.docker
      volumes:
        - name: dockerconfig
          secret:
            secretName: builder-dockerconfig
            items:
              - key: .dockerconfigjson
                path: config.json
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workflow-role
rules:
  # pod get/watch is used to identify the container IDs of the current pod
  # pod patch is used to annotate the step's outputs back to controller (e.g. artifact location)
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  # logs get/watch are used to get the pods logs for script outputs, and for log archival
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow-role
subjects:
  - kind: ServiceAccount
    name: builder
---
