apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  annotations:
    workflows.argoproj.io/description: 'Build weckdengeparden applicationa and push image'
    workflows.argoproj.io/maintainer: '@gepardec'
    workflows.argoproj.io/tags: java, git
    workflows.argoproj.io/version: '>= 2.9.0'
  name: weckdengeparden-build
spec:
  arguments:
    parameters:
    - name: repo
      value: https://github.com/Gepardec/weckdengeparden.git
    - name: revision
      value: feature/argo-workflows
  entrypoint: cicd
  serviceAccountName: argo
  templates:
  - inputs: {}
    metadata: {}
    name: cicd
    outputs: {}
    steps:
    - - arguments: {}
        name: checkout
        template: checkout
    - - arguments: {}
        name: build-jar
        template: build-jar
    - - arguments:
          parameters:
          - name: tag
            value: '{{ steps.checkout.outputs.parameters.image-tag }}'
        name: image-build-push
        template: image-build-push
  - container:
      args:
      - cd /mnt/out/ && git clone {{ workflow.parameters.repo }} && cd weckdengeparden
        && git checkout {{ workflow.parameters.revision }} && git rev-parse --short
        HEAD > ./git-commit
      command:
      - sh
      - -c
      image: alpine/git
      name: git
      resources: {}
      volumeMounts:
      - mountPath: /mnt/out/
        name: workspace
    inputs: {}
    metadata:
      labels:
        app: argo
    name: checkout
    outputs:
      parameters:
      - name: image-tag
        valueFrom:
          path: /mnt/out/weckdengeparden/git-commit
  - container:
      args:
      - cd /mnt/out/weckdengeparden/ && mvn clean package -DskipTests
      command:
      - sh
      - -c
      image: maven:3.8.4-jdk-11
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /mnt/out/
        name: workspace
    inputs: {}
    metadata:
      labels:
        app: argo
    name: build-jar
    outputs: {}
  - container:
      args:
      - --dockerfile=Containerfile
      - --context=/mnt/out/weckdengeparden
      - --destination=image-registry.openshift-image-registry.svc.cluster.local:5000/argo-workflows/wdg:{{inputs.parameters.tag}}
      - --skip-tls-verify
      - -vdebug
      image: gcr.io/kaniko-project/executor:latest
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /mnt/out/
        name: workspace
      - mountPath: /kaniko/.docker
        name: dockerconfig
    inputs:
      parameters:
      - name: tag
    metadata:
      labels:
        app: argo
    name: image-build-push
    outputs: {}
    volumes:
    - name: dockerconfig
      secret:
        items:
        - key: .dockerconfigjson
          path: config.json
        secretName: argo-sa-dockercfg-2
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: workspace
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 500M
